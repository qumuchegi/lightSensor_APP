{"version":3,"sources":["App.js","index.js"],"names":["ws","WebSocket","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","haslighton","light","_this2","onmessage","data","console","log","JSON","parse","setState","send","_this3","react_default","a","createElement","className","id","onClick","on","off","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"4LAEMA,SAAK,IAAIC,UAAU,wBAgEVC,cA5Db,SAAAA,EAAYC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IAChBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAM,CACTC,YAAW,EACXC,MAAM,IAJQT,mFAOC,IAAAU,EAAAP,KACdP,EAAGe,UAAU,SAAAC,GACXC,QAAQC,IAAIF,EAAKA,MACdG,KAAKC,MAAMJ,EAAKA,MAAMH,QACxBI,QAAQC,IAAI,uCAASC,KAAKC,MAAMJ,EAAKA,MAAMH,OAC3CC,EAAKO,SAAS,CAACR,MAAMM,KAAKC,MAAMJ,EAAKA,MAAMH,4CAIzCG,GACNC,QAAQC,IAAIF,EAAKA,MACF,MAAZA,EAAKA,KAENT,KAAKc,SAAS,CAACT,YAAW,IAE1BL,KAAKc,SAAS,CAACT,YAAW,iCAO9BZ,EAAGsB,KAAK,iCAIRtB,EAAGsB,KAAK,oCAGD,IAAAC,EAAAhB,KACP,OACEiB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,wDAGFF,EAAAC,EAAAC,cAAA,OAAKE,GAAG,UACNJ,EAAAC,EAAAC,cAAA,sCAEEnB,KAAKI,MAAMC,WAAWY,EAAAC,EAAAC,cAAA,MAAIE,GAAG,MAAP,8CAAyBJ,EAAAC,EAAAC,cAAA,MAAIE,GAAG,OAAP,wCAEjDJ,EAAAC,EAAAC,cAAA,OAAKE,GAAG,SAAR,qBAAoBrB,KAAKI,MAAME,QAGjCW,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKE,GAAG,SAASC,QAAS,kBAAIN,EAAKO,OAAnC,gBACAN,EAAAC,EAAAC,cAAA,OAAKE,GAAG,SAASC,QAAS,kBAAIN,EAAKQ,QAAnC,yBAtDQC,aCClBC,IAASC,OAAOV,EAAAC,EAAAC,cAACS,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.7e4f0d75.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nconst ws = new WebSocket('ws://chegi.xyz:9093')\n//const socket = client('ws://chegi.xyz:9091')\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state={\n      haslighton:false,\n      light:''\n    }\n  }\n  componentDidMount(){\n       ws.onmessage=data=>{\n         console.log(data.data)\n         if(JSON.parse(data.data).light){\n          console.log('接收光照度：',JSON.parse(data.data).light)\n          this.setState({light:JSON.parse(data.data).light})\n         }\n       }\n  }\n  receiveOn(data){\n      console.log(data.data)\n      if(data.data==='0')\n      { \n        this.setState({haslighton:true})\n      }else{\n        this.setState({haslighton:false})\n      }\n  }\n  on(){\n\n    //socket.emit('send',{light:'2'})///\n    //ws.send(JSON.stringify({light:'8'}))\n    ws.send(0)\n    //ws.onmessage=data=>this.receiveOn(data)\n  }\n  off(){\n    ws.send(1)\n    //ws.onmessage=data=>this.receiveOn(data)\n   }\n  render() {\n    return (\n      <div className=\"App\">\n        <div>\n          <p>物联网远程控灯</p>\n        </div>\n \n        <div id=\"result\">\n          <h4>操作结果</h4>\n          {\n            this.state.haslighton?<h3 id='on'>已经点亮了！！</h3>:<h3 id='off'>已经熄灭！！</h3>\n          }\n          <div id=\"light\">亮度：{this.state.light}</div>\n        </div>  \n     \n        <div>\n          <div id='button' onClick={()=>this.on()}>点亮</div>\n          <div id='button' onClick={()=>this.off()}>熄灭</div> \n        </div>\n       </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n \nimport App from './App';\n \n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n \n"],"sourceRoot":""}